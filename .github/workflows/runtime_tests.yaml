name: Multipy runtime tests

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unittest:
    strategy:
      matrix:
        python-major-version: [3]
        python-minor-version: [7,8,9,10]
        platform: [linux.4xlarge.nvidia.gpu]
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout MultiPy
        uses: actions/checkout@v2
        with:
          submodules: true
      - name: Clean up previous CUDA driver installations
        shell: bash
        run: |
          set -x
          yum list installed | grep nvidia || true
          yum list installed | grep cuda || true
          sudo yum remove -y cuda || true
          sudo yum remove -y cuda-drivers || true
          sudo yum remove -y "*nvidia*" || true
      - name: Install nvidia driver, nvidia-docker runtime, set GPU_FLAG
        run: |
          bash .github/scripts/install_nvidia_utils_linux.sh || true
          echo "GPU_FLAG=--gpus all" >> "${GITHUB_ENV}"
      - name: Setup SSH (Click me for login details)
        uses: ./.github/actions/setup-ssh
        with:
          github-secret: ${{ secrets.GITHUB_TOKEN }}

      - name: Build
        env:
          DOCKER_BUILDKIT: 1
        run: nvidia-docker build -t multipy --progress=plain --build-arg PYTHON_MAJOR_VERSION=${{ matrix.python-major-version }} --build-arg PYTHON_MINOR_VERSION=${{ matrix.python-minor-version }} --build-arg BUILD_CUDA_TESTS=1 .

      - name: Test
        run: |
          nvidia-docker run --rm multipy bash -c "if [[ ${{ matrix.python-minor-version }} -lt 8 ]]; then source ~/venvs/multipy/bin/activate; fi && multipy/runtime/build/test_deploy"
          nvidia-docker run --rm multipy bash -c "if [[ ${{ matrix.python-minor-version }} -lt 8 ]]; then source ~/venvs/multipy/bin/activate; fi && multipy/runtime/build/test_deploy_gpu"


      - name: Examples
        run: |
          docker run --rm multipy bash -c "if [[ ${{ matrix.python-minor-version }} -lt 8 ]]; then source ~/venvs/multipy/bin/activate; fi && examples/build/hello_world_example"
          docker run --rm multipy bash -c "if [[ ${{ matrix.python-minor-version }} -lt 8 ]]; then source ~/venvs/multipy/bin/activate; fi && python3 examples/quickstart/gen_package.py && ./examples/build/quickstart my_package.pt"
          docker run --rm multipy bash -c "if [[ ${{ matrix.python-minor-version }} -lt 8 ]]; then source ~/venvs/multipy/bin/activate; fi && ./examples/build/movable_example"

      - name: Compat Tests
        run: |
          docker run --rm multipy bash -c "if [[ ${{ matrix.python-minor-version }} -gt 7 ]]; then pip install -r compat-requirements.txt && multipy/runtime/build/interactive_embedded_interpreter --pyscript multipy/runtime/test_compat.py; fi"
