name: Runtime Unittests

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  unittest:
    strategy:
      matrix:
        python-version: [3.8]
        platform: [ubuntu-18.04]
      fail-fast: false
    runs-on: ${{ matrix.platform }}
    steps:
    - name: Checkout MultiPy
      uses: actions/checkout@v2

    - name: create conda env
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: ${{ matrix.python-version }}
        activate-environment: multipy_runtime_env
    - name: Install python dependencies
      shell: bash -l {0}
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
        conda activate multipy_runtime_env
        conda install -y astunparse numpy ninja pyyaml mkl mkl-include setuptools cmake cffi typing_extensions future six requests dataclasses
    - name: Build third-party libraries
      shell: bash -l {0}
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
            conda activate multipy_runtime_env
            cd runtime/third-party/fmt
            mkdir build
            cd build
            pwd
            cmake ..
            cd ../../pybind11
            mkdir build
            cd build
            pwd
            cmake ..
            cd ../../pytorch
            pwd
            USE_DEPLOY=1 python setup.py develop
            cd ../..
            pwd
    - name: Build multipy runtime
      shell: bash -l {0}
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
            mkdir build
            cd build
            cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL=OFF -DCMAKE_PREFIX_PATH="../third-party/pybind11/build;../third-party/fmt/build" ..
            cmake --build . --config Release
            ./test_deploy
    - name: Run test_deploy
      shell: bash -l {0}
      env:
        PYTHON_VERSION: ${{ matrix.python-version }}
      run: |
            ./test_deploy
